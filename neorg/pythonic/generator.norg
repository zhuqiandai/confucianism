
* Generator

** Python

	 > 参考链接：https://wiki.python.org/moin/Generators

- *所有的生成器都是迭代器*
- 生成器看起来像函数，但是行为像迭代器
- 生成器每次产生并返回一个值
- 生成器每次返回值时把控制权交还给调用者

	 > 维基百科：生成器通常在一个循环内部被调用。生成器第一次被调用是在进入这个循环结构时，创建一个对象以封装生成器的状态、绑定的实参。生成器的实体接着被执行直至遇到一个特别的 `yield` 动作，在这里提供给 `yield` 动作的值被返回给调用者。在下一次调用同一个生成器的时候，生成器从 `yield` 动作之后恢复执行，直到遇上另一个 `yield` 动作。生成器的执行也可以遇到 `finish` （`break` 可以被实现为向生成器发送 `finish`）动作而终止。


@code python

def hello():
	pass

@end

** EMCAScript

